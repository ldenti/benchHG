from os.path import join as pjoin

REF=config["ref"]
TVCF=config["truth"]
CVCF=config["call"]
REGIONS=config["regions"]
# CONF="/data/sveval/hg002.dipcall.bed" #config["CONF"]
# TRF="/data/hg38/human_GRCh38_no_alt_analysis_set.trf.bed" #config["TRF"]
ODIR=config["odir"]

regions = []
for line in open(REGIONS):
    regions.append(line.strip("\n"))

rule run:
    input:
        expand(pjoin(ODIR, "{region}", "scores.txt"),
               region = regions),
    output:
        pjoin(ODIR, "results.txt")
    shell:
        """
        cat {input} > {output}
        """

rule get_haplos:
    input:
        fa=REF,
        tvcf=TVCF,
        cvcf=CVCF,
    output:
        fa=pjoin(ODIR, "{region}", "haps.fa"),
        tvcf=pjoin(ODIR, "{region}", "truth.vcf"),
        cvcf=pjoin(ODIR, "{region}", "call.vcf"),
    shell:
        """
        samtools faidx {input.fa} {wildcards.region} | bcftools consensus {input.tvcf} -H 1 | tr acgt ACGT | sed "s/>/>1 /g " > {output.fa}
        samtools faidx {input.fa} {wildcards.region} | bcftools consensus {input.tvcf} -H 2 | tr acgt ACGT | sed "s/>/>2 /g " >> {output.fa}
        bcftools view {input.tvcf} {wildcards.region} > {output.tvcf}
        bcftools view {input.cvcf} {wildcards.region} > {output.cvcf}
        """

rule build_graph:
    input:
        fa=REF,
        cvcf=CVCF,
    output:
        vg=pjoin(ODIR, "{region}", "cgraph.vg"),
        gfa=pjoin(ODIR, "{region}", "cgraph.gfa"),
        csv=pjoin(ODIR, "{region}", "cgraph.csv"),
    shell:
        """
        vg construct -a -r {input.fa} -v {input.cvcf} -R {wildcards.region} > {output.vg} # -S -i -f ?
        vg convert --gfa-out {output.vg} > {output.gfa}
        echo "Node,Seq" > {output.csv}
        grep "^S" {output.gfa} | cut -f 2,3 | tr "\t" "," >> {output.csv}
        """

rule align:
    input:
        vg=pjoin(ODIR, "{region}", "cgraph.vg"),
        fa=pjoin(ODIR, "{region}", "haps.fa"),
    output:
        gaf=pjoin(ODIR, "{region}", "pasgal.gaf"),
    shell:
        """
        ~/code/PaSGAL/build/PaSGAL -m vg -r {input.vg} -q {input.fa} -o {output.gaf} -t 1
        """

rule compute_score:
    input:
        gfa=pjoin(ODIR, "{region}", "cgraph.gfa"),
        tvcf=pjoin(ODIR, "{region}", "truth.vcf"),
        cvcf=pjoin(ODIR, "{region}", "call.vcf"),
        gaf=pjoin(ODIR, "{region}", "pasgal.gaf"),
    output:
        txt=pjoin(ODIR, "{region}", "scores.txt"),
    shell:
        """
        python3 compute_score.py {input.gfa} {input.tvcf} {input.cvcf} {input.gaf} > {output.txt}
        """

# rule get_loci:
#     input:
#         fa=REF,
#         tvcf=TVCF,
#         cvcf=CVCF,
#         conf=CONF,
#         trf=TRF
#     output:
#         pjoin(ODIR, "loci.good.txt")
#     params:
#         pjoin(ODIR, "loci")
#     shell:
#         """
#         python3 get_loci.py {input.fa} {input.tvcf} {input.cvcf} --conf {input.conf} --trf {input.trf -w 250 -o {params}
#         """
